name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m venv venv
          venv/bin/python -m pip install --upgrade pip
          venv/bin/python -m pip install -r requirements.txt

      - name: Run Tests manually
        run: venv/bin/python tests.py  # Run tests without activating venv

  deploy:
    needs: build
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m venv venv
          venv/bin/python -m pip install --upgrade pip
          venv/bin/python -m pip install -r requirements.txt

      - name: Install Platypus CLI
        run: |
          brew install platypus  # Install Platypus GUI
          ln -s /Applications/Platypus.app/Contents/MacOS/Platypus /usr/local/bin/platypus  # Link CLI tool

      - name: Build macOS Application
        run: |
          platypus -P -y -a "Secure Password Manager" -o "None" -i "icon.icns" -f "python3 main.py" "build/SecurePasswordManager.app"

      - name: Package as DMG
        run: |
          hdiutil create -volname "Secure Password Manager" -srcfolder "build/SecurePasswordManager.app" -ov -format UDZO "SecurePasswordManager.dmg"

      - name: Upload DMG to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: SecurePasswordManager.dmg
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v1.0.${{ github.run_number }}
          name: "Secure Password Manager v1.0.${{ github.run_number }}"
          body: "Automated release of Secure Password Manager"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}